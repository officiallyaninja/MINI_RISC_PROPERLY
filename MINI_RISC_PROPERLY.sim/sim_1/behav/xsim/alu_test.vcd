$date
   Thu Feb 27 19:13:57 2025
$end

$version
  2024.2.0
  $dumpfile ("alu_test.vcd") 
$end

$timescale
  1ps
$end

$scope module ALU_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 5 # opcode [4:0] $end
$var reg 16 $ operand_1 [15:0] $end
$var reg 16 % operand_2 [15:0] $end
$var reg 4 & bit_position [3:0] $end
$var wire 16 ' result_0 [15:0] $end
$var wire 16 ( result_1 [15:0] $end
$var wire 16 ) current_flags [15:0] $end
$var wire 16 * next_flags [15:0] $end
$var integer 32 + num_failures [31:0] $end
$scope module alu $end
$var wire 5 , opcode [4:0] $end
$var wire 16 - operand_1 [15:0] $end
$var wire 16 . operand_2 [15:0] $end
$var wire 4 / bit_position [3:0] $end
$var wire 16 ) current_flags [15:0] $end
$var reg 16 0 result_0 [15:0] $end
$var reg 16 1 result_1 [15:0] $end
$var reg 16 2 next_flags [15:0] $end
$var reg 32 3 mul_temp [31:0] $end
$var reg 16 4 div_temp [15:0] $end
$var reg 17 5 add_temp [16:0] $end
$scope function parity $end
$upscope $end
$scope task set_common_flags $end
$var reg 16 6 value [15:0] $end
$upscope $end
$upscope $end
$scope module flag_reg $end
$var wire 1 7 clk $end
$var wire 1 8 reset $end
$var wire 16 * next_flags [15:0] $end
$var reg 16 9 current_flags [15:0] $end
$upscope $end
$scope task test_case $end
$var reg 256 : test_name [255:0] $end
$var reg 5 ; test_opcode [4:0] $end
$var reg 16 < test_op1 [15:0] $end
$var reg 16 = test_op2 [15:0] $end
$var reg 4 > test_bit_pos [3:0] $end
$var reg 1 ? failed $end
$var reg 32 @ expected_mul [31:0] $end
$var reg 16 A expected_div [15:0] $end
$var reg 16 B expected_mod [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
1"
b0 #
b0 $
b0 %
b0 &
b0 '
bx (
b0 )
b10100000 *
b0 +
b0 ,
b0 -
b0 .
b0 /
b0 0
bx 1
b10100000 2
bx 3
bx 4
b0 5
b0 6
07
18
b0 9
bx :
bx ;
bx <
bx =
bx >
x?
bx @
bx A
bx B
$end

#5000
1!
17

#10000
0!
07

#15000
1!
17

#20000
0!
0"
07
08

#25000
1!
b10100000 )
17
b10100000 9

#30000
0!
07

#35000
1!
17

#40000
0!
07

#45000
1!
17

#50000
0!
07

#55000
1!
17

#60000
0!
07

#65000
1!
17

#70000
0!
07

#75000
1!
17

#80000
0!
07

#85000
1!
17

#90000
0!
07

#95000
1!
17

#100000
0!
07

#105000
1!
17

#110000
0!
07

#115000
1!
17

#120000
0!
b1010 $
b10100 %
b11110 '
b100000 *
b1010 -
b10100 .
b11110 0
b100000 2
b11110 5
b11110 6
07
b10000010100010001000100001000000010110100100000010011100110111101110010011011010110000101101100 :
b0 ;
b1010 <
b10100 =
b0 >
0?

#125000
1!
b1111111111111111 $
b1 %
b0 '
b100000 )
b10100001 *
b1111111111111111 -
b1 .
b0 0
b10100001 2
b10000000000000000 5
b0 6
17
b100000 9
b100000101000100010001000010000000101101001000000100001101100001011100100111001001111001 :
b1111111111111111 <
b1 =

#130000
0!
07

#135000
1!
b111111111111111 $
b111111111111111 %
b1111111111111110 '
b10100001 )
b1000010 *
b111111111111111 -
b111111111111111 .
b1111111111111110 0
b1000010 2
b1111111111111110 5
b1111111111111110 6
17
b10100001 9
b100000101000100010001000010000000101101001000000100111101110110011001010111001001100110011011000110111101110111 :
b111111111111111 <
b111111111111111 =

#140000
0!
07

#145000
1!
b1 #
b1010 $
b10100 %
b11001000 '
b0 (
b1000010 )
b1000010 *
b1 ,
b1010 -
b10100 .
b11001000 0
b0 1
b1000010 2
b11001000 3
17
b1000010 9
b10011010101010101001100001000000010110100100000010011100110111101110010011011010110000101101100 :
b1 ;
b1010 <
b10100 =

#150000
0!
07

#155000
1!
b1111111111111111 $
b10 %
b1111111111111110 '
b1 (
b1111111111111111 -
b10 .
b1111111111111110 0
b1 1
b11111111111111110 3
17
b100110101010101010011000010000000101101001000000100110001100001011100100110011101100101 :
b1111111111111111 <
b10 =
b11001000 @

#160000
0!
07

#165000
1!
b10 #
b10100 $
b1010 %
b1010 '
b100000 *
b10 ,
b10100 -
b1010 .
b1010 0
b100000 2
b1010 6
17
b10100110101010101000010001000000010110100100000010011100110111101110010011011010110000101101100 :
b10 ;
b10100 <
b1010 =
b11111111111111110 @

#170000
0!
07

#175000
1!
b101000 $
b11101 %
b1011 '
b100000 )
b0 *
b101000 -
b11101 .
b1011 0
b0 2
b1011 6
17
b100000 9
b101001101010101010000100010000000101101001000000100111001100101011001110110000101110100011010010111011001100101 :
b101000 <
b11101 =

#180000
0!
07

#185000
1!
b11 #
b10100 $
b101 %
b100 '
b0 (
b0 )
b11 ,
b10100 -
b101 .
b100 0
b0 1
b0 2
b100 6
17
b0 9
b10001000100100101010110001000000010110100100000010011100110111101110010011011010110000101101100 :
b11 ;
b10100 <
b101 =

#190000
0!
07

#195000
1!
b0 %
b1111111111111111 '
b10 *
b0 .
b1111111111111111 0
b10 2
17
b1000100010010010101011000100000001011010010000001000010011110010010000001011010011001010111001001101111 :
b0 =
b100 A
b0 B

#200000
0!
07

#205000
1!
b100 #
b1010101010101010 $
b101010101010101 '
b10 )
b100010 *
b100 ,
b1010101010101010 -
b101010101010101 0
b100010 2
b101010101010101 6
17
b10 9
b10011100100111101010100 :
b100 ;
b1010101010101010 <

#210000
0!
07

#215000
1!
b101 #
b101010101010101 %
b0 '
b100010 )
b10100010 *
b101 ,
b101010101010101 .
b0 0
b10100010 2
b0 6
17
b100010 9
b10000010100111001000100 :
b101 ;
b101010101010101 =

#220000
0!
07

#225000
1!
b110 #
b1111111111111111 '
b10100010 )
b1100010 *
b110 ,
b1111111111111111 0
b1100010 2
b1111111111111111 6
17
b10100010 9
b100111101010010 :
b110 ;

#230000
0!
07

#235000
1!
b111 #
b1100010 )
b111 ,
b1100010 2
17
b1100010 9
b10110000100111101010010 :
b111 ;

#240000
0!
07

#245000
1!
b1000 #
b1010 $
b0 %
b1011 '
b0 *
b1000 ,
b1010 -
b0 .
b1011 0
b0 2
b1011 5
b1011 6
17
b10010010100111001000011001000000010110100100000010011100110111101110010011011010110000101101100 :
b1000 ;
b1010 <
b0 =

#250000
0!
07

#255000
1!
b1111111111111111 $
b0 '
b0 )
b10100001 *
b1111111111111111 -
b0 0
b10100001 2
b10000000000000000 5
b0 6
17
b0 9
b100100101001110010000110010000000101101001000000100111101110110011001010111001001100110011011000110111101110111 :
b1111111111111111 <

#260000
0!
07

#265000
1!
b1001 #
b1010 $
b1010 %
b10100001 )
b10101000 *
b1001 ,
b1010 -
b1010 .
b10101000 2
17
b10100001 9
b100001101001101010100000010000000101101001000000100010101110001011101010110000101101100 :
b1001 ;
b1010 <
b1010 =

#270000
0!
07

#275000
1!
b10100 $
b1010 '
b10101000 )
b100100 *
b10100 -
b1010 0
b100100 2
b1010 6
17
b10101000 9
b1000011010011010101000000100000001011010010000001000111011100100110010101100001011101000110010101110010 :
b10100 <

#280000
0!
07

#285000
1!
b1010 $
b10100 %
b1111111111110110 '
b100100 )
b1100001 *
b1010 -
b10100 .
b1111111111110110 0
b1100001 2
b1111111111110110 6
17
b100100 9
b1000011010011010101000000100000001011010010000001001100011001010111001101110011 :
b1010 <
b10100 =

#290000
0!
07

#295000
1!
b1010 #
b1010101010101010 $
b0 %
b101010101010101 '
b1100001 )
b100001 *
b1010 ,
b1010101010101010 -
b0 .
b101010101010101 0
b100001 2
b101010101010101 6
17
b1100001 9
b101001001010010 :
b1010 ;
b1010101010101010 <
b0 =

#300000
0!
07

#305000
1!
b1011 #
b100001 )
b1011 ,
b100001 2
17
b100001 9
b101001001001100 :
b1011 ;

#310000
0!
07

#315000
1!
b1100 #
b0 $
b1000 &
b100000000 '
b1 *
b1100 ,
b0 -
b1000 /
b100000000 0
b1 2
b100000000 6
17
b1010011010001010101010001000010 :
b1100 ;
b0 <
b1000 >

#320000
0!
07

#325000
1!
b1101 #
b1111111111111111 $
b1111111011111111 '
b1 )
b1000001 *
b1101 ,
b1111111111111111 -
b1111111011111111 0
b1000001 2
b1111111011111111 6
17
b1 9
b1000011010011000101001001000010 :
b1101 ;
b1111111111111111 <

#330000
0!
07

#335000
1!
b1110 #
b1000001 )
b1110 ,
b1000001 2
17
b1000001 9
b1000011010100000100110001000010 :
b1110 ;

#340000
0!
07

#345000
1!
b1111 #
b0 $
b0 &
b1111 ,
b0 -
b0 /
17
b101001101000101010101000100011000100000001011010010000001000011011000010111001001110010011110010010000001000110011011000110000101100111 :
b1111 ;
b0 <
b0 >

#350000
0!
07

#355000
1!
b111 &
b11000001 *
b111 /
b11000001 2
17
b1010011010001010101010001000110001000000010110100100000010110100110010101110010011011110010000001000110011011000110000101100111 :
b111 >

#360000
0!
07

#365000
1!
b110 &
b11000001 )
b11000001 *
b110 /
b11000001 2
17
b11000001 9
b101001101000101010101000100011000100000001011010010000001001110011001010110011101100001011101000110100101110110011001010010000001000110011011000110000101100111 :
b110 >

#370000
0!
07

#375000
1!
b100 &
b11010001 *
b100 /
b11010001 2
17
b10100110100010101010100010001100010000000101101001000000100011101100101011011100110010101110010011000010110110000100000010100000111010101110010011100000110111101110011011001010010000001000110011011000110000101100111 :
b100 >

#380000
0!
07

#385000
1!
b10000 #
b0 &
b11010001 )
b11010000 *
b10000 ,
b0 /
b11010000 2
17
b11010001 9
b100001101001100010100100100011000100000001011010010000001000011011000010111001001110010011110010010000001000110011011000110000101100111 :
b10000 ;
b0 >

#390000
0!
07

#395000
1!
b10001 #
b11010000 )
b11010001 *
b10001 ,
b11010001 2
17
b11010000 9
b100001101010000010011000100011000100000001011010010000001000011011000010111001001110010011110010010000001000110011011000110000101100111 :
b10001 ;

#400000
0!
07

#405000
1!
b11010001 )
b11010000 *
b11010000 2
17
b11010001 9

#410000
0!
07

#415000
1!
b11010000 )
b11010001 *
b11010001 2
17
b11010000 9

#420000
0!
07

#425000
1!
b11010001 )
b11010000 *
b11010000 2
17
b11010001 9

#430000
0!
07

#435000
1!
b11010000 )
b11010001 *
b11010001 2
17
b11010000 9

#440000
0!
07

#445000
1!
b11010001 )
b11010000 *
b11010000 2
17
b11010001 9

#450000
0!
07

#455000
1!
b11010000 )
b11010001 *
b11010001 2
17
b11010000 9

#460000
0!
07

#465000
1!
b11010001 )
b11010000 *
b11010000 2
17
b11010001 9

#470000
0!
07

#475000
1!
b11010000 )
b11010001 *
b11010001 2
17
b11010000 9

#480000
0!
07

#485000
1!
b11010001 )
b11010000 *
b11010000 2
17
b11010001 9

#490000
0!
07

#495000
1!
b11010000 )
b11010001 *
b11010001 2
17
b11010000 9

#500000
0!
07
